@model SailorsWebApi.Models.RentingEquipment

@{
    ViewBag.Title = "Create";
}

<h2>Wynajem sprzętu</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Utwórz</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (Session["Function"] != null && Session["Function"].ToString() == "0")
    {
        <div class="form-group">
            @Html.Label("Nazwa wynajmującego", "renterId", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("renterId", null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.renterId, "", new {@class = "text-danger"})
            </div>
        </div>
    }
        <div class="form-group">
            @Html.Label("Ekwipunek do wynajęcia", "equipmentId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("equipmentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.equipmentId, "", new { @class = "text-danger" })
            </div>
        </div>

    <div class="form-group">
        @Html.Label("Nazwa rezerwacji", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rentName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rentName, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            @Html.Label("Czas rozpoczęcia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rentTimeStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rentTimeStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Czas zakończenia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rentTimeEnd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rentTimeEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Opis wynajmu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rentDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rentDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Utwórz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć do listy", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
